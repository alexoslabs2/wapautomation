---
- name: Install OSSEC dependencies
  apt:
    name:
      - build-essential
      - make
      - zlib1g-dev
      - libpcre2-dev
      - libssl-dev
      - python3-pip
      - python3-venv
      - libsystemd-dev
      - git
    state: present
    update_cache: yes
  become: true

- name: Ensure pip3 is available
  ansible.builtin.command: which pip3
  register: pip3_path
  changed_when: false
  failed_when: pip3_path.rc != 0

#- name: Install pexpect (via pip3)
#  pip:
#    name: pexpect
#    executable: pip3
#  become: true

- name: Install pexpect from system packages
  apt:
    name: python3-pexpect
    state: present
    update_cache: yes
  become: true

- name: (OSSEC) Check if OSSEC is already installed
  stat:
    path: "{{ ossec_dir }}"
  register: ossec

- name: (OSSEC) Retrieve latest version of OSSEC from GitHub
  git:
    repo: https://github.com/ossec/ossec-hids.git
    dest: /opt/ossec-hids
    update: yes
  register: gitupdate

- name: (OSSEC) Install OSSEC-HIDS in local mode
  expect:
    command: "/bin/bash /opt/ossec-hids/install.sh"
    timeout: 300
    responses:
      'en/br': "en"
      'Press ENTER': ""
      'What kind of installation do you want': "{{ ossec_install_type }}"
      'Choose where to install the OSSEC HIDS': "{{ ossec_dir }}"
      'Do you want e-mail notification': "{{ ossec_email }}"
      'e-mail address': "{{ ossec_email_address }}"
      'Do you want to use it': "{{ ossec_detected_smtp_use }}"
      'SMTP server ip': "{{ ossec_smtp_server }}"
      'Do you want to run the integrity check daemon': "{{ ossec_integritycheck_daemon }}"
      'Do you want to run the rootkit detection engine': "{{ ossec_rootkit_engine }}"
      'Do you want to enable active response': "{{ ossec_active_response }}"
      'Do you want to enable the firewall-drop response': "{{ ossec_firewalldrop_response }}"
      'Do you want to add more IPs to the white list': "n"
  become: true
  notify: restart ossec
  when: not ossec.stat.exists
  register: ossecinstall

- name: Monitor all nginx logs
  replace:
    path: /var/ossec/etc/ossec.conf
    regexp: access.log
    replace: "*log"

- name: (OSSEC) Cleanup local changes in GIT repository
  command: "{{ item }}"
  args:
    chdir: /opt/ossec-hids
  with_items:
    - git checkout -f
    - git clean -fd
  register: gitcleanup
  when: ossecinstall is changed

- name: (OSSEC) Update OSSEC-HIDS
  expect:
    command: "/bin/bash /opt/ossec-hids/install.sh"
    responses:
      'en/br': "en"
      'Press ENTER': ""
      'Do you want to update it': "y"
      'Do you want to update the rules': "y"
  notify: restart ossec
  become: true
  when: ossec.stat.exists and gitupdate is changed

- name: (OSSEC) Start OSSEC service
  service:
    name: ossec
    state: started

